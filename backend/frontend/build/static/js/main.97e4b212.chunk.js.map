{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screen/Homescreen.js","screen/ProductScreen.js","actions/cartAction.js","screen/CartScreen.js","components/FormContainer.js","screen/LoginScreen.js","screen/RegisterScreen.js","screen/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screen/ShippingScreen.js","screen/PaymentScreen.js","screen/PlaceOrderScreen.js","screen/OrderScreen.js","screen/UserListScreen.js","screen/UserEditScreen.js","screen/ProductListScreen.js","screen/OrderListScreen.js","screen/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","paymentMethod","item","existItem","find","x","map","filter","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","number_reviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Homescreen","search","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","errorProductReview","loadingProductReview","successProductReview","params","ListGroup","description","countInstock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","Number","console","log","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","SdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPaypalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","OrderListScreen","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInstock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.97e4b212.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST= 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS= 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL= 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST= 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS= 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL= 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST= 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS= 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL= 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST= 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS= 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL= 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET= 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM= 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM= 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, \r\n    combineReducers, \r\n    applyMiddleware } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, \r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer\r\n} from './reducers/productReducers'\r\n\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, \r\n    userRegisterReducer, \r\n    userDetailsReducer, \r\n    userUpdateProfileReducer, \r\n    userListReducer, \r\n    userDeleteReducer,\r\n    userUpdateReducer } from './reducers/userReducers'\r\n\r\nimport { orderCreateReducer, \r\n    orderDetailsReducer, \r\n    orderPayReducer, \r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer } from './reducers/orderReducers'\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete:productDeleteReducer,\r\n    productCreate:productCreateReducer,\r\n    productUpdate:productUpdateReducer,\r\n    productReviewCreate:productReviewCreateReducer,\r\n    productTopRated:productTopRatedReducer,\r\n    cart: cartReducer,\r\n    \r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList:userListReducer,\r\n    userDelete:userDeleteReducer,\r\n    userUpdate:userUpdateReducer,\r\n\r\n    orderCreate:orderCreateReducer,\r\n    orderDetails:orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n    orderListMy:orderListMyReducer,\r\n    orderList:orderListReducer,\r\n    orderDeliver:orderDeliverReducer,\r\n    \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n        JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n        JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems : cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\nconst middleware = [thunk]\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store","import { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    \r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n\r\n } from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                products: action.payload.products, \r\n                page:action.payload.page, pages:action.payload.pages\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {reviews:[]} }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDeleteReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return {loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return {loading: false, success:true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productCreateReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return {loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {loading: false, success:true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: []}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products:[] }\r\n\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS, \r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS\r\n } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state={ cartItems: [], shippingAddress: {}, paymentMethod: {} },  action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return{\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGOUT ,\r\n\r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, \r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_SUCCESS, \r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST, \r\n    USER_LIST_SUCCESS, \r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST, \r\n    USER_DELETE_SUCCESS, \r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST, \r\n    USER_UPDATE_SUCCESS, \r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading: true}\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true}\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success:true,user: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userListReducer = (state = { users:[] }, action) => {\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true}\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: []}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true}\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return {loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {}}, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true}\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return {loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return {loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { users: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload \r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems:[], shippingAddress:{}}, action) => {\r\n    switch (action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,                \r\n                order: action.payload \r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,                \r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders:[] }, action) => {\r\n    switch (action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,                \r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = { orders:[] }, action) => {\r\n    switch (action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,                \r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,                \r\n                success: true\r\n            }\r\n\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload \r\n            }\r\n\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n\r\n\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}","import React, {useState} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword){\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={submitHandler} inline>\r\n                <Form.Control\r\n                    type='text'\r\n                    name='q'\r\n                    onChange={ (e) => setKeyword(e.target.value)}\r\n                    className='mr-sm-2 ml-sm-5'\r\n                >\r\n                </Form.Control>\r\n\r\n                <Button\r\n                    type='submit'\r\n                    variant='outline-info'\r\n                    className='p-2'\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Form>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import { \r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGIN_FAIL, \r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, \r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_SUCCESS, \r\n    USER_UPDATE_PROFILE_FAIL,\r\n\r\n    USER_LIST_REQUEST, \r\n    USER_LIST_SUCCESS, \r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST, \r\n    USER_DELETE_SUCCESS, \r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST, \r\n    USER_UPDATE_SUCCESS, \r\n    USER_UPDATE_FAIL,\r\n\r\n\r\n} from '../constants/userConstants'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/login',\r\n            {'username':email, 'password':password},\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT})\r\n    dispatch({ type: USER_DETAILS_RESET})\r\n    dispatch({ type: ORDER_LIST_MY_RESET})\r\n    dispatch({ type: USER_LIST_RESET})\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/users/register',\r\n            { 'name':name ,'email':email, 'password':password},\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            '/api/users/update',\r\n            user,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            '/api/users',\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:USER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/users/delete/${id}`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:USER_DELETE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/users/update/${user._id}`,\r\n            user,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar,Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nfunction Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = () =>{\r\n      dispatch(logout())\r\n    }\r\n\r\n    return (\r\n            <header>\r\n                \r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                  <LinkContainer to='/'>\r\n                <Navbar.Brand >Home</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                  <Nav className=\"mr-auto\">\r\n                  \r\n                    <LinkContainer to='/cart'>\r\n                    <Nav.Link > <i className=\"fas fa-shopping-cart\"> Cart</i> </Nav.Link></LinkContainer>\r\n\r\n                    {userInfo ? (\r\n                      <NavDropdown title={userInfo.name} id='username'>\r\n                        <LinkContainer to='/profile'>\r\n                          <NavDropdown.Item>\r\n                              Profile\r\n                          </NavDropdown.Item>\r\n                        </LinkContainer>\r\n\r\n                        <NavDropdown.Item onClick={logoutHandler}>\r\n                              Logout\r\n                          </NavDropdown.Item>\r\n\r\n                      </NavDropdown>\r\n                    ) : (\r\n                      <LinkContainer to='/login'>\r\n                        <Nav.Link ><i className=\"fas fa-user\"> LogIn</i></Nav.Link>\r\n                      </LinkContainer>\r\n                    )}\r\n\r\n                    {userInfo && userInfo.isAdmin && (\r\n                      <NavDropdown title={'Admin'} id='adminmenu'>\r\n                      <LinkContainer to='/admin/userlist'>\r\n                        <NavDropdown.Item>\r\n                            Users\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to='/admin/productlist'>\r\n                        <NavDropdown.Item>\r\n                            Products\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to='/admin/orderlist'>\r\n                        <NavDropdown.Item>\r\n                            Orders\r\n                        </NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      \r\n\r\n                    </NavDropdown>\r\n                    )}\r\n\r\n                    \r\n\r\n                  </Nav>\r\n                  <SearchBox />\r\n                </Navbar.Collapse>\r\n                </Container>\r\n              </Navbar>\r\n                \r\n            </header>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container,Row,Col } from 'react-bootstrap'\r\n\r\nfunction Footer() {\r\n    return (\r\n            <footer>\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"text-center py-3\">Copyright &copy; Ecommerce</Col>\r\n                    </Row>\r\n                </Container>\r\n            </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Rating({ value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                    ? 'fas fa-star'\r\n                    : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n                </span>\r\n                <span>\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                    ? 'fas fa-star'\r\n                    : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n                </span>\r\n                <span>\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                    ? 'fas fa-star'\r\n                    : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n                </span>\r\n                <span>\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                    ? 'fas fa-star'\r\n                    : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n                </span>\r\n                <span>\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                    ? 'fas fa-star'\r\n                    : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span> { text && text } </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({ product }) {\r\n    return (\r\n            <Card className=\"my-3 p-3 rounded\">\r\n                <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />  \r\n                </Link>  \r\n                <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                <Card.Title as=\"div\" >\r\n                <strong>\r\n                {product.name}\r\n                    </strong>\r\n                    </Card.Title>  \r\n                </Link> \r\n                <Card.Text as=\"div\" >\r\n                <div className=\"my-3\">\r\n                <Rating value={product.rating} text={`${product.number_reviews} reviews`} color={'#40bcc9'} />\r\n                    </div>\r\n                    </Card.Text>\r\n                <Card.Text as=\"h3\" >\r\n                \r\n                ${product.price} \r\n                    \r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card> \r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <Spinner \r\n        animation='grow'\r\n        role='status'\r\n        style={{\r\n            height:'100px',\r\n            width:'100px',\r\n            margin:'auto',\r\n            display:'block'\r\n        }}\r\n        >\r\n         <span className='sr-only'>Loading...</span>   \r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nfunction Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin=false}) {\r\n\r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer\r\n                    key={x+1}\r\n                    to={!isAdmin ?\r\n                        `/?keyword=${keyword}&page=${x+1}`\r\n                        : `/admin/productlist/?keyword=${keyword}&page=${x+1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item\r\n                        active={x+1 === page}\r\n                    >\r\n                        {x+1}\r\n                    </Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n\r\n } from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const{data} = await axios.get(`/api/products${keyword}`)\r\n\r\n        dispatch({ \r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const{data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/products/delete/${id}`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:PRODUCT_DELETE_SUCCESS\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/products/create`,\r\n            {},\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:PRODUCT_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews`,\r\n            review,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const{data} = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({ \r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error){\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products} = productTopRated\r\n\r\n    useEffect(()=>{\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n    return ( loading ? <Loader/>\r\n    :error ? <Message variant='danger'>{error}</Message>\r\n    : (\r\n        <Carousel \r\n            pause='hover'\r\n            className='bg-dark'\r\n            >\r\n                {products.map(product => (\r\n                    <Carousel.Item key={product._id}>\r\n                        <Link to={`/product/${product._id}`}>\r\n                            <Image src={product.image} alt={product.name} fluid/>\r\n                            <Carousel.Caption className='carousel.caption'>\r\n                                <h4>{product.name} (${product.price})</h4>\r\n                            </Carousel.Caption>\r\n                        </Link>\r\n                    </Carousel.Item>\r\n                ))}\r\n        </Carousel>\r\n    )\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Pagination } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nfunction Homescreen({history}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector( state => state.productList )\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n    \r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel/>}\r\n            \r\n            <h1>Latest Products</h1>\r\n            { loading ? <Loader/>\r\n            : error ? <Message variant='secondary'>{error}</Message>\r\n            : \r\n            <div>\r\n            <Row>\r\n            { products.map(product =>(\r\n                <Col key = {product._id} sm={12} md={6} lg={4} xl={3}>\r\n                    <Product product={product}/>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n        <Paginate page={page} pages={pages} keyword={keyword}/>\r\n        </div>\r\n        }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homescreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nfunction ProductScreen({ match, history }) {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector( state => state.productDetails )\r\n    const { error, loading, product } = productDetails\r\n\r\n    const userLogin = useSelector( state => state.userLogin )\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector( state => state.productReviewCreate )\r\n    const { error:errorProductReview, \r\n        loading:loadingProductReview, \r\n        success:successProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])\r\n    \r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            match.params.id, {\r\n            rating,\r\n            comment\r\n        }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            { loading ? <Loader/>\r\n            : error ? <Message variant='secondary'>{error}</Message>\r\n            : ( <div>\r\n                <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid/>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.number_reviews} reviews`} color={'#40bcc9'}/>\r\n                        </ListGroup.Item>\r\n                        \r\n                        <ListGroup.Item>\r\n                            price : ${product.price}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Description : { product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Price : </Col>\r\n                                <Col><strong>${ product.price }</strong></Col>\r\n                            </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Status: </Col>\r\n                                    <Col>{product.countInstock > 0 ? 'In Stock' : 'Out Of Stock'}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {product.countInstock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>QTY</Col>\r\n                                            <Col xs='auto' className='my-1'>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={qty}\r\n                                                onChange={(e)=> setQty(e.target.value)}\r\n                                            >\r\n                                                {\r\n                                                    [...Array(product.countInstock).keys()].map((x)=>(\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n                                            </Form.Control>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                                <Button \r\n                                onClick={addToCartHandler}\r\n                                className='btn-block' \r\n                                disabled={product.countInstock<1} \r\n                                type='button'>Add to Cart </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n                \r\n                <Row>\r\n                    <Col md={6}>\r\n                        <h4>Reviews</h4>\r\n                        {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n                        \r\n                        <ListGroup variant='flush'>\r\n                            {product.reviews.map((review) => (\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} color='#40bcc9'/>\r\n                                    <p>{review.createdAt.substring(0,10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n\r\n                            <ListGroup.Item>\r\n                                <h4>Write a review</h4>\r\n                                {loadingProductReview && <Loader />}\r\n                                {successProductReview && <Message variant='success'>Review Submitted</Message>}\r\n                                {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                {userInfo ? (\r\n                                    <Form onSubmit={submitHandler}>\r\n                                        <Form.Group controlId='rating'>\r\n                                            <Form.Label>Rating</Form.Label>\r\n                                            <Form.Control\r\n                                            as='select'\r\n                                            value={rating}\r\n                                            onChange={(e) => setRating(e.target.value)}>\r\n                                                <option value=''>Select..</option>\r\n                                                <option value='1'>1 - poor</option>\r\n                                                <option value='2'>2 - Fair</option>\r\n                                                <option value='3'>3 - Good</option>\r\n                                                <option value='4'>4 - Vary Good</option>\r\n                                                <option value='5'>5 - Excellent</option>\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group controlId='comment'>\r\n                                            <Form.Label>Review</Form.Label>\r\n                                            <Form.Control\r\n                                                as='textarea'\r\n                                                row='6'\r\n                                                value={comment}\r\n                                                onChange={(e) => setComment(e.target.value)}\r\n                                            >\r\n\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n\r\n                                        <Button\r\n                                        disabled={loadingProductReview}\r\n                                        type='submit'\r\n                                        variant='primary'>\r\n                                            Submt\r\n                                        </Button>\r\n                                    </Form>\r\n                                ) : (\r\n                                    <Message variant='info'>Please <Link to='/login'>Login</Link> to write a review</Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n                </div>\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async(dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload:{\r\n            product:data._id,\r\n            name:data.name,\r\n            image:data.image,\r\n            price:data.price,\r\n            countInstock:data.countInstock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n    \r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    \r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n    \r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, {useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartAction'\r\n\r\nfunction CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]): 1\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n    console.log('cartItems:', cartItems)\r\n\r\n    useEffect(() =>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message variant='info'>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3}>\r\n                                    <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e)=> dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                                            >\r\n                                                {\r\n                                                    [...Array(item.countInstock).keys()].map((x)=>(\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            {x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n                                            </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <Button \r\n                                        type='button'\r\n                                        variant='light'\r\n                                        onClick={() => removeFromCartHandler(item.product)}\r\n                                        > \r\n                                        <i className='fas fa-trash-alt '></i> \r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n\r\n\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Total ({cartItems.reduce((acc, item) => acc+ item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc+ item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button \r\n                        type='button' \r\n                        className='btn-block' \r\n                        disabled={cartItems.length === 0}\r\n                        onClick={checkoutHandler}\r\n                        >\r\n                                                Checkout\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className=\"justify-content-md-center text-left\">\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\n\r\nfunction LoginScreen({location, history}) {\r\n    \r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {error, loading, userInfo} = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Button \r\n                    type='submit'\r\n                    variant='primary'\r\n                > \r\n                    Sign In\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}\r\n                    >\r\n                    Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Form} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({location, history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if( password != confirmPassword){\r\n            setMessage('Password do not match')\r\n        }else{\r\n            dispatch(register(name ,email, password))\r\n        } \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Re-Type Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Button \r\n                    type='submit'\r\n                    variant='primary'\r\n                > \r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n                    >\r\n                    Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Form, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\n\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders} = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || !user.name || success || userInfo.id !== user._id){\r\n                dispatch({ type:USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch ,history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if( password != confirmPassword){\r\n            setMessage('Password do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({ \r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n             }))\r\n             setMessage('')\r\n        } \r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3} className=\"justify-content-md-center text-left\">\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                       \r\n                        type='text'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                   \r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                     \r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Re-Type Password</Form.Label>\r\n                    <Form.Control\r\n                    \r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Button \r\n                    type='submit'\r\n                    variant='primary'\r\n                > \r\n                    Update\r\n                </Button>\r\n\r\n            </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingOrders ? (\r\n                <Loader/>\r\n            ) : errorOrders ? (\r\n                <Message variant='danger'>{errorOrders}</Message>\r\n            ) : (\r\n                <Table striped responsive className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>TotalL</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0,10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                )}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n    \r\n} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/order/add',\r\n            order,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type:CART_CLEAR_ITEMS,\r\n            payload:data\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/order/${id}`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:ORDER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/order/${id}/pay`,\r\n            paymentResult,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:ORDER_PAY_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/order/${order._id}/deliver`,\r\n            {},\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:ORDER_DELIVER_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            '/api/order/myorders',\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:ORDER_LIST_MY_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            '/api/order',\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:ORDER_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                <LinkContainer to='/login'>\r\n                    <Nav.Link>Login</Nav.Link>\r\n                </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>LogIin</Nav.Link>\r\n                )}\r\n                \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                <LinkContainer to='/shipping'>\r\n                    <Nav.Link>Shipping</Nav.Link>\r\n                </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n                \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                <LinkContainer to='/payment'>\r\n                    <Nav.Link>Payment</Nav.Link>\r\n                </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n                \r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                <LinkContainer to='/placeholder'>\r\n                    <Nav.Link>Placeholder</Nav.Link>\r\n                </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Placeholder</Nav.Link>\r\n                )}\r\n                \r\n            </Nav.Item>\r\n            \r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingAddress } from '../actions/cartAction'\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n    const dispatch = useDispatch()\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n            </Form.Group>\r\n\r\n            <Button \r\n                    type='submit'\r\n                    variant='primary'\r\n                > \r\n                    Continue\r\n                </Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savePaymentMethod } from '../actions/cartAction'\r\n\r\nfunction PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if (!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) =>{\r\n       e.preventDefault()\r\n       dispatch(savePaymentMethod(paymentMethod))\r\n       history.push('/placeorder') \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n                <Form.Label as='legend'>Select Method</Form.Label>\r\n                <Col>\r\n                <Form.Check\r\n                    type='radio'\r\n                    label='Paypal Or Credit Card'\r\n                    id='paypal'\r\n                    name='paymentMethod'\r\n                    checked\r\n                    onChange= {(e) => setPaymentMethod(e.target.value)}\r\n                >\r\n\r\n                </Form.Check>\r\n                </Col>\r\n\r\n\r\n            </Form.Group>\r\n\r\n        \r\n            <Button type='submit' variant='primary'>\r\n                Continue\r\n            </Button>\r\n        </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, error, success} = orderCreate\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice < 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number(((0.082) * cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice = Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({\r\n                type:ORDER_CREATE_RESET\r\n            })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8} className='text-left'>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                                </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index)=> (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            \r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items:</Col>\r\n                                        <Col>${cart.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping:</Col>\r\n                                        <Col>${cart.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax:</Col>\r\n                                        <Col>${cart.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total:</Col>\r\n                                        <Col>${cart.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    {error && <Message variant='danger'>{error}</Message>}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        type='button'\r\n                                        className='btn-block'\r\n                                        disabled={cart.cartItems === 0}\r\n                                        onClick={placeOrder}\r\n                                    >\r\n                                        Place Order\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Link } from 'react-router-dom'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [SdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingPay, success:successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading:loadingDeliver, success:successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n\r\n    }\r\n    //AfY1fTL5NbMdYhD6oF7zofhgkBKSLg9x-jPV6Tdx5khbakWFxjAUHQjdbwOSjZ_f-d-yUBzjgXnD_GjD\r\n\r\n    const addPaypalScript = () =>{\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AfY1fTL5NbMdYhD6oF7zofhgkBKSLg9x-jPV6Tdx5khbakWFxjAUHQjdbwOSjZ_f-d-yUBzjgXnD_GjD'\r\n        script.async = true\r\n        script.onload = () =>{\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n\r\n    }\r\n   \r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver ){\r\n            dispatch({ type:ORDER_PAY_RESET })\r\n            dispatch({ type:ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPaypalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n        \r\n        \r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8} className='text-left'>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Paid on {order.deliveredAt}</Message>\r\n                            ):(\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ):(\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Your order is empty\r\n                                </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index)=> (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            \r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items:</Col>\r\n                                        <Col>${order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping:</Col>\r\n                                        <Col>${order.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax:</Col>\r\n                                        <Col>${order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total:</Col>\r\n                                        <Col>${order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                {!order.isPaid && (\r\n                                    <ListGroup.Item>\r\n                                       {loadingPay && <Loader/>} \r\n\r\n                                       {!SdkReady ? (\r\n                                           <Loader/>\r\n                                       ) : (\r\n                                            <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}\r\n                                            />\r\n                                       )}\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                \r\n                        </ListGroup>\r\n                        {loadingDeliver && <Loader/>}\r\n                        {userInfo && userInfo.isAdmin  && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}>\r\n                                    Mark As Deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Table} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nfunction UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const {loading, error, users} = userList\r\n\r\n    const userLogin= useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userDelete= useSelector(state => state.userDelete)\r\n    const { success:successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {loading\r\n            ? <Loader/>\r\n                : error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <Table striped bordered hover responsive className='table'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>EMAIL</th>\r\n                                <th>ADMIN</th>\r\n                                <th> </th>\r\n                            </tr>\r\n                            \r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {users.map(user => (\r\n                                <tr key={user._id}>\r\n                                    <td>{user._id}</td>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.email}</td>\r\n                                    <td>{user.isAdmin ? (\r\n                                        <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{ color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    \r\n                                    <td>\r\n                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                            <Button variant='dark' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Form} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\n\r\nfunction UserEditScreen({ history, match }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const {error:errorUpdate, loading:loadingUpdate, success:successUpdate} = userUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n            \r\n        }else{\r\n            if(!user.name || user._id !== Number(userId)){\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n        \r\n    }, [dispatch, user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({_id:user._id, name, email, isAdmin}))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Link to='/admin/userlist'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit User</h1>\r\n\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n            {loading ? <Loader/> \r\n            : error ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n\r\n                        type='text'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='isAdmin'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Check\r\n                        \r\n                        type='checkbox'\r\n                        label='Is Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                    >\r\n                    </Form.Check>\r\n\r\n                </Form.Group>\r\n\r\n\r\n\r\n                <Button \r\n                    type='submit'\r\n                    variant='primary'\r\n                > \r\n                    Update\r\n                </Button>\r\n\r\n            </Form>\r\n            )}\r\n\r\n            \r\n\r\n            \r\n        </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Table, Row, Col} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products, page, pages} = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {loading:loadingDelete, error:errorDelete, success:successDelete} = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const {loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct} = productCreate\r\n\r\n    const userLogin= useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n        if(!userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successCreate){\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        }else{\r\n           dispatch(listProducts(keyword)) \r\n        }\r\n        \r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to this product?')){\r\n            dispatch(deleteProduct(id))\r\n        }\r\n        \r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader/>}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader/>}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {loading\r\n            ? <Loader/>\r\n                : error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <div>\r\n                    <Table striped bordered hover responsive className='table'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            \r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td className='text-center'>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                            <Button variant='dark' className='btn-sm'>\r\n                                            <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate page={page} pages={pages} isAdmin={true}/>\r\n                    </div>\r\n                )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Table} from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nfunction OrderListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n\r\n    const userLogin= useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loading\r\n            ? <Loader/>\r\n                : error\r\n                ? (<Message variant='danger'>{error}</Message>)\r\n                : (\r\n                    <Table striped bordered hover responsive className='table'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>User</th>\r\n                                <th>Date</th>\r\n                                <th>Total</th>\r\n                                <th>Paid</th>\r\n                                <th>Delivered</th>\r\n                                <th> </th>\r\n                            </tr>\r\n                            \r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.user && order.user.name}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>${order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{ color: 'red'}}></i>\r\n                                    )}</td>\r\n\r\n                                    <td>{order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i className='fas fa-check' style={{ color: 'red'}}></i>\r\n                                    )}</td>\r\n                                    \r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant='dark' className='btn-sm'>\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInstock, setCountInstock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInstock(product.countInstock)\r\n                setDescription(product.description)\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, product, productId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInstock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n        setUploading(true)\r\n        try{\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type':'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post('/api/products/upload',\r\n                formData,\r\n                config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n\r\n        }catch(error){\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    value={image}\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                                <Form.File\r\n                                   id='image-file'\r\n                                   label='Choose FIle'\r\n                                   custom\r\n                                   onChange={uploadFileHandler} \r\n                                >\r\n\r\n                                </Form.File>\r\n                                {uploading && <Loader/>}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand'\r\n                                    value={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label>Stock</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    value={countInstock}\r\n                                    onChange={(e) => setCountInstock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter category'\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import Header from './components/Header'\nimport Footer from './components/Footer'\nimport Homescreen from './screen/Homescreen'\nimport ProductScreen from './screen/ProductScreen'\nimport CartScreen from './screen/CartScreen'\nimport LoginScreen from './screen/LoginScreen'\nimport RegisterScreen from './screen/RegisterScreen'\nimport ProfileScreen from './screen/ProfileScreen'\nimport ShippingScreen from './screen/ShippingScreen'\nimport PaymentScreen from './screen/PaymentScreen'\nimport PlaceOrderScreen from './screen/PlaceOrderScreen'\nimport OrderScreen from './screen/OrderScreen'\nimport UserListScreen from './screen/UserListScreen'\nimport UserEditScreen from './screen/UserEditScreen'\nimport ProductListScreen from './screen/ProductListScreen'\nimport OrderListScreen from './screen/OrderListScreen'\nimport ProductEditScreen from './screen/ProductEditScreen'\nimport { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n      \n      <main className=\"py-3\">\n      <Container>\n        <Route path='/' component={Homescreen} exact />\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/profile' component={ProfileScreen} />\n        <Route path='/payment' component={PaymentScreen} />\n        <Route path='/placeorder' component={PlaceOrderScreen} />\n        <Route path='/order/:id' component={OrderScreen} />\n        <Route path='/shipping' component={ShippingScreen} />\n        <Route path='/product/:id' component={ProductScreen} />\n        <Route path='/cart/:id?' component={CartScreen} />\n        <Route path='/admin/userlist' component={UserListScreen} />\n        <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n        <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n        <Route path='/admin/productlist' component={ProductListScreen} />\n        <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n      \n      <Footer/>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}