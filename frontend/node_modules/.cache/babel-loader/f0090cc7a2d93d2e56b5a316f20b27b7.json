{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/order/add', order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    });\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/order/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/order/${id}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/order/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/MH Tanmoy/Desktop/Ecommerce/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","CART_CLEAR_ITEMS","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","localStorage","removeItem","error","response","detail","message","getOrderDetails","id","get","payOrder","paymentResult","put","getMyOrders"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    \r\n} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            '/api/order/add',\r\n            order,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:ORDER_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        dispatch({\r\n            type:CART_CLEAR_ITEMS,\r\n            payload:data\r\n        })\r\n        localStorage.removeItem('cartItems')\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/order/${id}`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:ORDER_DETAILS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(\r\n            `/api/order/${id}/pay`,\r\n            paymentResult,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:ORDER_PAY_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\r\n            `/api/order/myorders`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:ORDER_LIST_MY_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}