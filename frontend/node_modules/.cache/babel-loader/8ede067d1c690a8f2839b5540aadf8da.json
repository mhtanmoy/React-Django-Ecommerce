{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MH Tanmoy\\\\Desktop\\\\Ecommerce\\\\frontend\\\\src\\\\screen\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { Link } from 'react-router-dom';\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrderScreen({\n  match\n}) {\n  _s();\n\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const [SdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    error,\n    loading\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    success: successDeliver\n  } = orderDeliver;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2);\n  } //AfY1fTL5NbMdYhD6oF7zofhgkBKSLg9x-jPV6Tdx5khbakWFxjAUHQjdbwOSjZ_f-d-yUBzjgXnD_GjD\n\n\n  const addPaypalScript = () => {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = 'https://www.paypal.com/sdk/js?client-id=AfY1fTL5NbMdYhD6oF7zofhgkBKSLg9x-jPV6Tdx5khbakWFxjAUHQjdbwOSjZ_f-d-yUBzjgXnD_GjD';\n    script.async = true;\n\n    script.onload = () => {\n      setSdkReady(true);\n    };\n\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId, successPay, successDeliver]);\n\n  const successPaymentHandler = paymentResult => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order: \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        className: \"text-left\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 32\n              }, this), order.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${order.user.email}`,\n                children: order.user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 56\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Shipping: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), order.shippingAddress.address, \", \", order.shippingAddress.city, '  ', order.shippingAddress.postalCode, \",\", '  ', order.shippingAddress.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.deliveredAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"warning\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.paidAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"warning\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"info\",\n              children: \"Your order is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 62\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 1,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      to: `/product/${item.product}`,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.qty, \" X $\", item.price, \" = $\", (item.qty * item.price).toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 49\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Items:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.itemsPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Shipping:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.shippingPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Tax:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.taxPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Total:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [loadingPay && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 55\n              }, this), !SdkReady ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 44\n              }, this) : /*#__PURE__*/_jsxDEV(PayPalButton, {\n                amount: order.totalPrice,\n                onSuccess: successPaymentHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              className: \"btn btn-block\",\n              onClick: deliverHandler,\n              children: \"Mark As Deliver\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderScreen, \"8y+RIXCHXxEEiqu2zW9xhexKRFg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["C:/Users/MH Tanmoy/Desktop/Ecommerce/frontend/src/screen/OrderScreen.js"],"names":["React","useEffect","useState","Button","Row","Col","ListGroup","Image","Card","LinkContainer","useDispatch","useSelector","Message","Loader","Link","getOrderDetails","payOrder","deliverOrder","PayPalButton","ORDER_PAY_RESET","ORDER_DELIVER_RESET","OrderScreen","match","orderId","params","id","dispatch","SdkReady","setSdkReady","orderDetails","state","order","error","loading","orderPay","loadingPay","success","successPay","orderDeliver","loadingDeliver","successDeliver","userLogin","userInfo","itemsPrice","orderItems","reduce","acc","item","price","qty","toFixed","addPaypalScript","script","document","createElement","type","src","async","onload","body","appendChild","_id","Number","isPaid","window","paypal","successPaymentHandler","paymentResult","deliverHandler","user","name","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","paidAt","length","map","index","image","product","shippingPrice","taxPrice","totalPrice","isAdmin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Link } from 'react-router-dom'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction OrderScreen({ match }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [SdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const {order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const {loading:loadingPay, success:successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const {loading:loadingDeliver, success:successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n\r\n    }\r\n    //AfY1fTL5NbMdYhD6oF7zofhgkBKSLg9x-jPV6Tdx5khbakWFxjAUHQjdbwOSjZ_f-d-yUBzjgXnD_GjD\r\n\r\n    const addPaypalScript = () =>{\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AfY1fTL5NbMdYhD6oF7zofhgkBKSLg9x-jPV6Tdx5khbakWFxjAUHQjdbwOSjZ_f-d-yUBzjgXnD_GjD'\r\n        script.async = true\r\n        script.onload = () =>{\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n\r\n    }\r\n   \r\n\r\n    useEffect(() => {\r\n        if(!order || successPay || order._id !== Number(orderId) || successDeliver ){\r\n            dispatch({ type:ORDER_PAY_RESET })\r\n            dispatch({ type:ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPaypalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n        \r\n        \r\n    }, [dispatch, order, orderId, successPay, successDeliver])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        <Loader/>\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8} className='text-left'>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {'  '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>Paid on {order.deliveredAt}</Message>\r\n                            ):(\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ):(\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Your order is empty\r\n                                </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index)=> (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            \r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items:</Col>\r\n                                        <Col>${order.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping:</Col>\r\n                                        <Col>${order.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax:</Col>\r\n                                        <Col>${order.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total:</Col>\r\n                                        <Col>${order.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                {!order.isPaid && (\r\n                                    <ListGroup.Item>\r\n                                       {loadingPay && <Loader/>} \r\n\r\n                                       {!SdkReady ? (\r\n                                           <Loader/>\r\n                                       ) : (\r\n                                            <PayPalButton\r\n                                                amount={order.totalPrice}\r\n                                                onSuccess={successPaymentHandler}\r\n                                            />\r\n                                       )}\r\n                                    </ListGroup.Item>\r\n                                )}\r\n\r\n                                \r\n                        </ListGroup>\r\n\r\n                        {userInfo && userInfo.isAdmin  && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliverHandler}>\r\n                                    Mark As Deliver\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n"]},"metadata":{},"sourceType":"module"}