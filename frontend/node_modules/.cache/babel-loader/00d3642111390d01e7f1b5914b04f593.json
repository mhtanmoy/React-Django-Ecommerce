{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethod: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/MH Tanmoy/Desktop/Ecommerce/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","cartReducer","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,EAA0CC,0BAA1C,EAAsEC,wBAAtE,QAAsG,4BAAtG;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAC;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,eAAe,EAAE;AAAlC,CAAP,EAAgDC,MAAhD,KAA2D;AAClF,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,aAAL;AACI,YAAMU,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;;AACA,UAAGH,SAAH,EAAa;AACT,eAAM,EACF,GAAGP,KADD;AAEFC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoBF,CAAC,IAC5BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADlC;AAFT,SAAN;AAKH,OAND,MAOI;AACA,eAAM,EACF,GAAGT,KADD;AAEFC,UAAAA,SAAS,EAAC,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAFR,SAAN;AAIH;;AACL,SAAKT,gBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHC,QAAAA,SAAS,EAACD,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AAFP,OAAP;;AAKJ,SAAKT,0BAAL;AACI,aAAM,EACF,GAAGG,KADD;AAEFE,QAAAA,eAAe,EAAEC,MAAM,CAACG;AAFtB,OAAN;;AAKJ,SAAKR,wBAAL;AACI,aAAM,EACF,GAAGE,KADD;AAEFa,QAAAA,aAAa,EAAEV,MAAM,CAACG;AAFpB,OAAN;;AAQJ;AACI,aAAON,KAAP;AAvCR;AAyCH,CA1CM","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state={ cartItems: [], shippingAddress: {} },  action) => {\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n            if(existItem){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems:state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return{\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return{\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        \r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}