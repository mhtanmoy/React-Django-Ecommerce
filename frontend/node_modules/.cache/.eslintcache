[{"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\index.js":"1","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\App.js":"2","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Header.js":"5","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Product.js":"6","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\Homescreen.js":"7","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Rating.js":"8","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\ProductScreen.js":"9","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\store.js":"10","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\reducers\\productReducers.js":"11","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\constants\\productConstants.js":"12","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Loader.js":"14","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Message.js":"15","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\CartScreen.js":"16","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\reducers\\cartReducers.js":"17","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\constants\\cartConstants.js":"18","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\actions\\cartAction.js":"19","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\reducers\\userReducers.js":"20","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\constants\\userConstants.js":"21","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\LoginScreen.js":"22","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\actions\\userActions.js":"23","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\FormContainer.js":"24","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\RegisterScreen.js":"25","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\ProfileScreen.js":"26","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\ShippingScreen.js":"27","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\CheckoutSteps.js":"28","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\PaymentScreen.js":"29","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\PlaceOrderScreen.js":"30","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\reducers\\orderReducers.js":"31","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\constants\\orderConstants.js":"32","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\actions\\orderActions.js":"33","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\OrderScreen.js":"34","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\UserListScreen.js":"35","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\UserEditScreen.js":"36","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\ProductListScreen.js":"37","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\ProductEditScreen.js":"38","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\OrderListScreen.js":"39"},{"size":594,"mtime":1620026021190,"results":"40","hashOfConfig":"41"},{"size":2152,"mtime":1625588318798,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1619172619158,"results":"43","hashOfConfig":"41"},{"size":403,"mtime":1619544642574,"results":"44","hashOfConfig":"41"},{"size":3009,"mtime":1624382375783,"results":"45","hashOfConfig":"41"},{"size":1145,"mtime":1619626457409,"results":"46","hashOfConfig":"41"},{"size":1092,"mtime":1622475528703,"results":"47","hashOfConfig":"41"},{"size":1892,"mtime":1619621486800,"results":"48","hashOfConfig":"41"},{"size":4910,"mtime":1623687751101,"results":"49","hashOfConfig":"41"},{"size":2346,"mtime":1625589882771,"results":"50","hashOfConfig":"41"},{"size":2889,"mtime":1625464078081,"results":"51","hashOfConfig":"41"},{"size":1037,"mtime":1625464041971,"results":"52","hashOfConfig":"41"},{"size":4393,"mtime":1625464203487,"results":"53","hashOfConfig":"41"},{"size":442,"mtime":1622475349146,"results":"54","hashOfConfig":"41"},{"size":238,"mtime":1622475449724,"results":"55","hashOfConfig":"41"},{"size":4703,"mtime":1622648947878,"results":"56","hashOfConfig":"41"},{"size":1554,"mtime":1623686997560,"results":"57","hashOfConfig":"41"},{"size":286,"mtime":1623686542094,"results":"58","hashOfConfig":"41"},{"size":1337,"mtime":1623421837805,"results":"59","hashOfConfig":"41"},{"size":4068,"mtime":1624457981882,"results":"60","hashOfConfig":"41"},{"size":1508,"mtime":1624457659187,"results":"61","hashOfConfig":"41"},{"size":2706,"mtime":1623339933319,"results":"62","hashOfConfig":"41"},{"size":7542,"mtime":1624460378400,"results":"63","hashOfConfig":"41"},{"size":404,"mtime":1622960720483,"results":"64","hashOfConfig":"41"},{"size":4092,"mtime":1623339959220,"results":"65","hashOfConfig":"41"},{"size":6435,"mtime":1624382183647,"results":"66","hashOfConfig":"41"},{"size":3281,"mtime":1623342757601,"results":"67","hashOfConfig":"41"},{"size":1651,"mtime":1623342614996,"results":"68","hashOfConfig":"41"},{"size":1649,"mtime":1623422081051,"results":"69","hashOfConfig":"41"},{"size":6989,"mtime":1623686469408,"results":"70","hashOfConfig":"41"},{"size":4415,"mtime":1625591586261,"results":"71","hashOfConfig":"41"},{"size":1262,"mtime":1625589244334,"results":"72","hashOfConfig":"41"},{"size":6184,"mtime":1625590452790,"results":"73","hashOfConfig":"41"},{"size":9459,"mtime":1625591115112,"results":"74","hashOfConfig":"41"},{"size":3479,"mtime":1624381606178,"results":"75","hashOfConfig":"41"},{"size":3797,"mtime":1624460050963,"results":"76","hashOfConfig":"41"},{"size":4609,"mtime":1625291486327,"results":"77","hashOfConfig":"41"},{"size":8160,"mtime":1625503149882,"results":"78","hashOfConfig":"41"},{"size":3408,"mtime":1625588135581,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"440uvp",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\index.js",[],["163","164"],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\App.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Header.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Product.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\Homescreen.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\ProductScreen.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\store.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\actions\\productActions.js",["165"],"import axios from 'axios'\r\nimport { \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL\r\n\r\n } from '../constants/productConstants'\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const{data} = await axios.get('/api/products')\r\n\r\n        dispatch({ \r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const{data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({ \r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error){\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.delete(\r\n            `/api/products/delete/${id}`,\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:PRODUCT_DELETE_SUCCESS\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: {userInfo},\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(\r\n            `/api/products/create`,\r\n            {},\r\n            config\r\n            )\r\n\r\n        dispatch({\r\n            type:PRODUCT_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}`,\r\n            product,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\Message.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\CartScreen.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\actions\\cartAction.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\LoginScreen.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\RegisterScreen.js",["166"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Form} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({location, history}) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo){\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if( password != confirmPassword){\r\n            setMessage('Password do not match')\r\n        }else{\r\n            dispatch(register(name ,email, password))\r\n        } \r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Re-Type Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Button \r\n                    type='submit'\r\n                    variant='primary'\r\n                > \r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n                    >\r\n                    Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\ProfileScreen.js",["167"],"import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Button, Form, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrders } from '../actions/orderActions'\r\n\r\n\r\n\r\nfunction ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders} = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo){\r\n            history.push('/login')\r\n        }else{\r\n            if(!user || !user.name || success || userInfo.id !== user._id){\r\n                dispatch({ type:USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch ,history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if( password != confirmPassword){\r\n            setMessage('Password do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({ \r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n             }))\r\n             setMessage('')\r\n        } \r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3} className=\"justify-content-md-center text-left\">\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                       \r\n                        type='text'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                   \r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                     \r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Re-Type Password</Form.Label>\r\n                    <Form.Control\r\n                    \r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n\r\n                </Form.Group>\r\n\r\n                <Button \r\n                    type='submit'\r\n                    variant='primary'\r\n                > \r\n                    Update\r\n                </Button>\r\n\r\n            </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n            <h2>My Orders</h2>\r\n            {loadingOrders ? (\r\n                <Loader/>\r\n            ) : errorOrders ? (\r\n                <Message variant='danger'>{errorOrders}</Message>\r\n            ) : (\r\n                <Table striped responsive className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>TotalL</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0,10)}</td>\r\n                                <td>${order.totalPrice}</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0,10) : (\r\n                                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                )}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>Details</Button>\r\n                                        </LinkContainer>\r\n                                </td>\r\n\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\ShippingScreen.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\PaymentScreen.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\PlaceOrderScreen.js",["168","169","170"],"import React, { useEffect, useState } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { Link } from 'react-router-dom'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, error, success} = orderCreate\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice < 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number(((0.082) * cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice = Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\r\n\r\n    if(!cart.paymentMethod){\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({\r\n                type:ORDER_CREATE_RESET\r\n            })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMethod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n        }))\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Row>\r\n                <Col md={8} className='text-left'>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                                </Message> : (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cart.cartItems.map((item, index)=> (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                    </Col>\r\n\r\n                                                    <Col>\r\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))}\r\n                                    </ListGroup>\r\n                                )}\r\n                            \r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Summary</h2>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Items:</Col>\r\n                                        <Col>${cart.itemsPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Shipping:</Col>\r\n                                        <Col>${cart.shippingPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Tax:</Col>\r\n                                        <Col>${cart.taxPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Total:</Col>\r\n                                        <Col>${cart.totalPrice}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    {error && <Message variant='danger'>{error}</Message>}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <Button\r\n                                        type='button'\r\n                                        className='btn-block'\r\n                                        disabled={cart.cartItems === 0}\r\n                                        onClick={placeOrder}\r\n                                    >\r\n                                        Place Order\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\actions\\orderActions.js",["171","172","173"],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\OrderScreen.js",["174","175"],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\UserListScreen.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\UserEditScreen.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\ProductListScreen.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\ProductEditScreen.js",[],"C:\\Users\\MH Tanmoy\\Desktop\\Ecommerce\\frontend\\src\\screen\\OrderListScreen.js",[],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":83,"column":16,"nodeType":"182","messageId":"183","endLine":83,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":33,"column":22,"nodeType":"186","messageId":"187","endLine":33,"endColumn":24},{"ruleId":"184","severity":1,"message":"185","line":51,"column":22,"nodeType":"186","messageId":"187","endLine":51,"endColumn":24},{"ruleId":"180","severity":1,"message":"188","line":1,"column":28,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"189","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":23},{"ruleId":"190","severity":1,"message":"191","line":37,"column":8,"nodeType":"192","endLine":37,"endColumn":26,"suggestions":"193"},{"ruleId":"180","severity":1,"message":"194","line":14,"column":5,"nodeType":"182","messageId":"183","endLine":14,"endColumn":20},{"ruleId":"180","severity":1,"message":"195","line":19,"column":5,"nodeType":"182","messageId":"183","endLine":19,"endColumn":24},{"ruleId":"180","severity":1,"message":"196","line":28,"column":5,"nodeType":"182","messageId":"183","endLine":28,"endColumn":24},{"ruleId":"180","severity":1,"message":"189","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":23},{"ruleId":"190","severity":1,"message":"197","line":70,"column":8,"nodeType":"192","endLine":70,"endColumn":62,"suggestions":"198"},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'LinkContainer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["201"],"'ORDER_PAY_RESET' is defined but never used.","'ORDER_LIST_MY_RESET' is defined but never used.","'ORDER_DELIVER_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["202"],"no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"207","text":"208"},"Update the dependencies array to be: [dispatch, order, orderId, successPay, successDeliver, userInfo, history]",{"range":"209","text":"210"},[1368,1386],"[success, history, order._id, dispatch]",[2482,2536],"[dispatch, order, orderId, successPay, successDeliver, userInfo, history]"]